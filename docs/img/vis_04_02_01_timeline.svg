<svg width="310px" height="350px" 
        xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
        id="tl_04_02_01">

    <desc>pass_reference</desc>

    <defs>
        <style type="text/css">
        <![CDATA[
        /* general setup */
:root {
    --bg-color:#f1f1f1;
    --text-color: #6e6b5e;
}

svg {
    background-color: var(--bg-color);
}

text {
    vertical-align: baseline;
    text-anchor: start;
}

#heading {
    font-size: 24px;
    font-weight: bold;
}

#caption {
    font-size: 0.875em;
    font-family: "Open Sans", sans-serif;
    font-style: italic;
}

/* code related styling */
text.code {
    fill: #6e6b5e;
    white-space: pre;
    font-family: "Source Code Pro", Consolas, "Ubuntu Mono", Menlo, "DejaVu Sans Mono", monospace, monospace !important;
    font-size: 0.875em;
}

/* event related styling */
#eventDot:hover {
    transform: scale(1.5);
}

#eventDot {
    transition: all 0.3s;
}

#functionDot:hover {
    transform: scale(1.5);
}

#functionDot {
    transition: all 0.3s;
}

/* timeline/event interaction styling */
.solid {
    stroke-width: 5px;
}

.hollow {
    stroke-width: 5px;
    fill: var(--bg-color);
}

.dotted {
    stroke-width: 5px;
    stroke-dasharray: "2 1";
}

.extend {
    stroke-width: 1px;
    stroke-dasharray: "2 1";
}

.colorless {
    stroke: var(--bg-color);
    fill: var(--bg-color);
}

.functionIcon {
    stroke: gray;
    fill: white;
    stroke-width: 1px;
    font-size: 24px;
    font-family: times;
    font-weight: lighter;
    dominant-baseline: central;
    text-anchor: start;
    font-style: italic;
}

/* flex related styling */
.flex-container {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    flex-wrap: nowrap;
    flex-shrink: 0;
}

object.tl_panel {
    flex-grow: 1;
}

object.code_panel {
    flex-grow: 0;
}

/* hash based styling */
[data-hash="0"] {
    fill: #6e6b5e;
}

[data-hash="1"] {
    fill: #3355ff;
    stroke: #3355ff;
}

[data-hash="2"] {
    fill: #33cc33;
    stroke: #33cc33;
}

[data-hash="3"] {
    fill: #dc143c;
    stroke: #dc143c;
}

[data-hash="4"] {
    fill: #6600ff;
    stroke: #6600ff;
}

[data-hash="5"] {
    fill: #ff33cc;
    stroke: #ff33cc;
}

[data-hash="6"] {
    fill: #008080;
    stroke: #008080;
}

[data-hash="7"] {
    fill: #ff9900;
    stroke: #ff9900;
}

[data-hash="8"] {
    fill: #00d6fc;
    stroke: #00d6fc;
}

[data-hash="9"] {
    fill: #9aeb58;
    stroke: #9aeb58;
}
        ]]>
        </style>
        <!-- Useful constructs -->
        <circle id="eventDot" cx="0" cy="0" r="5"/>
        <!-- used when pass to function by ref -->
        <g id="functionDot">
             <circle id="eventDot" cx="0" cy="0" r="5"/>
             <text class="functionIcon" dx="-4" dy="0" fill="#6e6b5e">f</text>
        </g>
        <marker id="arrowHead" viewBox="0 0 10 10"
            refX="1" refY="5" 
            markerUnits="strokeWidth"
            markerWidth="3px" markerHeight="3px"
            orient="auto" fill="gray">
            <path d="M 0 0 L 10 5 L 0 10 z" fill="inherit"/>
        </marker>
    </defs>

    <g id="labels">
        <text x="210" y="90" style="text-anchor:middle" data-hash="3" class="code tooltip-trigger" data-tooltip-text="s, immutable">s</text>
        <text x="70" y="90" style="text-anchor:middle" data-hash="1" class="code tooltip-trigger" data-tooltip-text="s1, immutable">s1</text>
        <text x="140" y="90" style="text-anchor:middle" data-hash="2" class="code tooltip-trigger" data-tooltip-text="len, immutable">len</text>
    </g>

    <g id="timelines">
        <line data-hash="1" class="hollow tooltip-trigger" x1="70" x2="70" y1="105" y2="145" data-tooltip-text="s1 is the unique value that can access the data in memory"/>

        <line class="colorless tooltip-trigger" stroke-width="2px" x1="70" x2="70" y1="110" y2="140" data-tooltip-text="s1 is the unique value that can access the data in memory"/>
        <line data-hash="1" class="solid tooltip-trigger" x1="70" x2="70" y1="145" y2="145" data-tooltip-text="some values are statically referencing to s1"/>
        <line data-hash="1" class="hollow tooltip-trigger" x1="70" x2="70" y1="145" y2="205" data-tooltip-text="s1 is the unique value that can access the data in memory"/>

        <line class="colorless tooltip-trigger" stroke-width="2px" x1="70" x2="70" y1="150" y2="200" data-tooltip-text="s1 is the unique value that can access the data in memory"/>
        <line data-hash="2" class="hollow tooltip-trigger" x1="140" x2="140" y1="145" y2="205" data-tooltip-text="len is the unique value that can access the data in memory"/>

        <line class="colorless tooltip-trigger" stroke-width="2px" x1="140" x2="140" y1="150" y2="200" data-tooltip-text="len is the unique value that can access the data in memory"/>
        <line data-hash="3" class="hollow tooltip-trigger" x1="210" x2="210" y1="245" y2="265" data-tooltip-text="s is the unique value that can access the data in memory; can read and write data; cannot point to another piece of data"/>

        <line class="colorless tooltip-trigger" stroke-width="2px" x1="210" x2="210" y1="250" y2="260" data-tooltip-text="s is the unique value that can access the data in memory; can read and write data; cannot point to another piece of data"/>
        <line data-hash="3" class="solid tooltip-trigger" x1="210" x2="210" y1="265" y2="265" data-tooltip-text="some values are statically referencing to s; can only read data"/>
        <line class="colorless tooltip-trigger" stroke-width="2px" x1="210" x2="210" y1="270" y2="260" data-tooltip-text="some values are statically referencing to s; can only read data"/>
        <line data-hash="3" class="hollow tooltip-trigger" x1="210" x2="210" y1="265" y2="285" data-tooltip-text="s is the unique value that can access the data in memory; can read and write data; cannot point to another piece of data"/>

        <line class="colorless tooltip-trigger" stroke-width="2px" x1="210" x2="210" y1="270" y2="280" data-tooltip-text="s is the unique value that can access the data in memory; can read and write data; cannot point to another piece of data"/>
    </g>

    <g id="ref_line">
        <path data-hash="3" class="colorless tooltip-trigger" style="fill:transparent;" stroke-width="2px" stroke-dasharray="3" d="M 210 245 l 15 8 v 24 l -15 8" data-tooltip-text="can mutate the resource it refers to"/>
    </g>

    <g id="events">
        <use xlink:href="#eventDot" data-hash="1" x="70" y="105" class="tooltip-trigger" data-tooltip-text="obtains data from String::from() (s1's lifetime begins from here)"/>
        <use xlink:href="#eventDot" data-hash="1" x="70" y="145" class="tooltip-trigger" data-tooltip-text="statically lends its data to calculate_length() (s1 becomes read-only)"/>
        <use xlink:href="#eventDot" data-hash="1" x="70" y="145" class="tooltip-trigger" data-tooltip-text="calculate_length() no longer borrows from s1"/>
        <use xlink:href="#eventDot" data-hash="1" x="70" y="205" class="tooltip-trigger" data-tooltip-text="s1 goes out of scope. The data is dropped."/>
        <use xlink:href="#eventDot" data-hash="2" x="140" y="145" class="tooltip-trigger" data-tooltip-text="obtains data from calculate_length() (len's lifetime begins from here)"/>
        <use xlink:href="#eventDot" data-hash="2" x="140" y="205" class="tooltip-trigger" data-tooltip-text="len goes out of scope. The data is dropped."/>
        <use xlink:href="#eventDot" data-hash="3" x="210" y="245" class="tooltip-trigger" data-tooltip-text="obtains data from another value (s's lifetime begins from here)"/>
        <use xlink:href="#eventDot" data-hash="3" x="210" y="265" class="tooltip-trigger" data-tooltip-text="statically lends its data to len() (s becomes read-only)"/>
        <use xlink:href="#eventDot" data-hash="3" x="210" y="265" class="tooltip-trigger" data-tooltip-text="len() no longer borrows from s"/>
        <use xlink:href="#eventDot" data-hash="3" x="210" y="285" class="tooltip-trigger" data-tooltip-text="s goes out of scope. The data is not dropped because s is not the owner."/>
    </g>

    <g id="arrows">
        <text x="96" y="110" data-hash="5" font-size="20" font-style="italic" class="tooltip-trigger fn-trigger" data-tooltip-text="String::from()">f</text>
        <polyline stroke-width="5px" stroke="gray" points="93,105 83,105 " marker-end="url(#arrowHead)" class="tooltip-trigger" data-tooltip-text="Move from the return value of String::from() to s1"/>
        <use xlink:href="#functionDot" data-hash="1" x="70" y="145" class="tooltip-trigger" data-tooltip-text="calculate_length() reads from s1"/>
        <text x="166" y="150" data-hash="4" font-size="20" font-style="italic" class="tooltip-trigger fn-trigger" data-tooltip-text="calculate_length()">f</text>
        <polyline stroke-width="5px" stroke="gray" points="163,145 153,145 " marker-end="url(#arrowHead)" class="tooltip-trigger" data-tooltip-text="Duplicate from the return value of calculate_length() to len"/>
        <use xlink:href="#functionDot" data-hash="3" x="210" y="265" class="tooltip-trigger" data-tooltip-text="len() reads from s"/>
    </g>

</svg>