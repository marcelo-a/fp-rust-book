<svg width="1800px" height="600px" viewBox="-300 0 1500 700"
        xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

    <desc>shared_and_unique_borrow</desc>

    <defs>
        <style type="text/css">
        <![CDATA[
        /* general setup */
svg {
    background-color: #232323;
}

text {
    fill: #cccccc;
    vertical-align: baseline;
    text-anchor: start;
}

#heading {
    font-size: 24px;
    font-weight: bold;
}

#caption {
    font-size: 12px;
}

/* code related styling */
text.code {
    white-space: pre;
    font-family: "monospace";
}

/* event related styling */
#eventDot:hover {
    transform: scale(1.5);
}

#eventDot {
    transition: all 0.3s;
}

/* timeline/event interaction styling */
.solid {
    stroke-width: 5px;
}

.hollow_internal {
    stroke-width: 3px;
    fill: #232323;
}

.dotted {
    stroke-width: 5px;
    stroke-dasharray: "2 1";
}

.extend {
    stroke-width: 1px;
    stroke-dasharray: "2 1";
}

.colorless {
    color: gray;
    fill: gray;
}

/* hash based styling */
[data-hash*="1"] {
    fill: #3355ff;
    stroke: #3355ff;
}

[data-hash*="2"] {
    fill: #33ff00;
    stroke: #33ff00;
}

[data-hash*="3"] {
    fill: #ff3300;
    stroke: #ff3300;
}

[data-hash*="4"] {
    fill: #fff300;
    stroke: #fff300;
}

[data-hash*="5"] {
    fill: #ff33cc;
    stroke: #ff33cc;
}

[data-hash*="6"] {
    fill: #00ffff;
    stroke: #00ffff;
}

[data-hash*="7"] {
    fill: #ff9900;
    stroke: #ff9900;
}

        ]]>
        </style>
        <!-- Useful constructs -->
        <circle id="eventDot" cx="0" cy="0" r="5"/>
        <marker id="arrowHead" viewBox="0 0 10 10"
            refX="1" refY="5" 
            markerUnits="strokeWidth"
            markerWidth="3px" markerHeight="3px"
            orient="auto" fill="beige">
            <path d="M 0 0 L 10 5 L 0 10 z" fill="inherit"/>
        </marker>
    </defs>

    <g>
        <text id="heading" x="-300" y="30">Visualization of Rust shared_and_unique_borrow</text>
        <text id="caption" x="-300" y="50">Hover over timeline event to get more information; click on variables to see its timeline.</text>
    </g>

    <g id="labels">
        <text class="code" x="-290" y="80" data-hash="1">s</text>
        <text class="code" x="-220" y="80" data-hash="2">r1</text>
        <text class="code" x="-80" y="80" data-hash="4">r3</text>
        <text class="code" x="-150" y="80" data-hash="3">r2</text>
    </g>

    <g id="timelines">
        <line data-hash="1" class="solid" x1="-290" x2="-290" y1="100" y2="140"><title>has read and write privilege to the real data</title></line>
        <line data-hash="1" class="solid" x1="-290" x2="-290" y1="140" y2="160"><title>has read only privilege to the real data</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-290" x2="-290" y1="145" y2="155"><title>has read only privilege to the real data</title></line>
        <line data-hash="1" class="solid" x1="-290" x2="-290" y1="160" y2="180"><title>has read only privilege to the real data</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-290" x2="-290" y1="165" y2="175"><title>has read only privilege to the real data</title></line>
        <line data-hash="1" class="solid" x1="-290" x2="-290" y1="180" y2="180"><title>has read only privilege to the real data</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-290" x2="-290" y1="185" y2="175"><title>has read only privilege to the real data</title></line>
        <line data-hash="1" class="solid" x1="-290" x2="-290" y1="180" y2="240"><title>has read and write privilege to the real data</title></line>
        <line data-hash="1" class="solid" x1="-290" x2="-290" y1="260" y2="300"><title>has read and write privilege to the real data</title></line>
        <line data-hash="2" class="solid" x1="-220" x2="-220" y1="140" y2="180"><title>has read only privilege to the reference itself</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-220" x2="-220" y1="145" y2="175"><title>has read only privilege to the reference itself</title></line>
        <line data-hash="2" class="solid" x1="-220" x2="-220" y1="180" y2="180"><title>has read only privilege to the reference itself</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-220" x2="-220" y1="185" y2="175"><title>has read only privilege to the reference itself</title></line>
        <line data-hash="2" class="solid" x1="-220" x2="-220" y1="180" y2="180"><title>has read only privilege to the reference itself</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-220" x2="-220" y1="185" y2="175"><title>has read only privilege to the reference itself</title></line>
        <line data-hash="3" class="solid" x1="-150" x2="-150" y1="160" y2="180"><title>has read only privilege to the reference itself</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-150" x2="-150" y1="165" y2="175"><title>has read only privilege to the reference itself</title></line>
        <line data-hash="3" class="solid" x1="-150" x2="-150" y1="180" y2="180"><title>has read only privilege to the reference itself</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-150" x2="-150" y1="185" y2="175"><title>has read only privilege to the reference itself</title></line>
        <line data-hash="3" class="solid" x1="-150" x2="-150" y1="180" y2="180"><title>has read only privilege to the reference itself</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-150" x2="-150" y1="185" y2="175"><title>has read only privilege to the reference itself</title></line>
        <line data-hash="4" class="solid" x1="-80" x2="-80" y1="240" y2="260"><title>has read only privilege to the reference itself</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-80" x2="-80" y1="245" y2="255"><title>has read only privilege to the reference itself</title></line>
        <line data-hash="4" class="solid" x1="-80" x2="-80" y1="260" y2="260"><title>has read only privilege to the reference itself</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-80" x2="-80" y1="265" y2="255"><title>has read only privilege to the reference itself</title></line>
        <line data-hash="4" class="solid" x1="-80" x2="-80" y1="260" y2="260"><title>has read only privilege to the reference itself</title></line>
        <line stroke="#232323" stroke-width="3px" x1="-80" x2="-80" y1="265" y2="255"><title>has read only privilege to the reference itself</title></line>
    </g>

    <g id="arrows">
        <text x="-264" y="105" font-size = "20" font-style = "italic" class="heavy" ><title>String::from()</title>F</text>        <polyline stroke-width="2.5" stroke="beige" points="-267,100 -277,100 " marker-end="url(#arrowHead)"><title>Move from the return value of String::from() to s</title></polyline>
        <polyline stroke-width="2.5" stroke="beige" points="-290,140 -230,140 " marker-end="url(#arrowHead)"><title>Static borrow from s to r1</title></polyline>
        <polyline stroke-width="2.5" stroke="beige" points="-290,160 -160,160 " marker-end="url(#arrowHead)"><title>Static borrow from s to r2</title></polyline>
        <text x="-220" y="180" font-size = "20" font-style = "italic" class="heavy" ><title>println!()</title>F</text>        <text x="-150" y="180" font-size = "20" font-style = "italic" class="heavy" ><title>println!()</title>F</text>        <polyline stroke-width="2.5" stroke="beige" points="-220,180 -280,180 " marker-end="url(#arrowHead)"><title>Return statically borrowed resource from r1 to s</title></polyline>
        <polyline stroke-width="2.5" stroke="beige" points="-150,180 -280,180 " marker-end="url(#arrowHead)"><title>Return statically borrowed resource from r2 to s</title></polyline>
        <polyline stroke-width="2.5" stroke="beige" points="-290,240 -90,240 " marker-end="url(#arrowHead)"><title>Mutable borrow from s to r3</title></polyline>
        <text x="-80" y="260" font-size = "20" font-style = "italic" class="heavy" ><title>println!()</title>F</text>        <polyline stroke-width="2.5" stroke="beige" points="-80,260 -280,260 " marker-end="url(#arrowHead)"><title>Return mutably borrowed resource from r3 to s</title></polyline>
    </g>

    <g id="events">
        <use xlink:href="#eventDot" data-hash="1" x="-290" y="100"><title>Acquiring resource from String::from()</title></use>
        <use xlink:href="#eventDot" data-hash="1" x="-290" y="140"><title>Partially lends resource to r1</title></use>
        <use xlink:href="#eventDot" data-hash="1" x="-290" y="160"><title>Partially lends resource to r2</title></use>
        <use xlink:href="#eventDot" data-hash="1" x="-290" y="180"><title>Partially reacquires resource from r1</title></use>
        <use xlink:href="#eventDot" data-hash="1" x="-290" y="180"><title>Partially reacquires resource from r2</title></use>
        <use xlink:href="#eventDot" data-hash="1" x="-290" y="240"><title>Mutable lend to r3</title></use>
        <use xlink:href="#eventDot" data-hash="1" x="-290" y="260"><title>Fully reacquires resource from r3</title></use>
        <use xlink:href="#eventDot" data-hash="1" x="-290" y="300"><title>Goes out of scope</title></use>
        <use xlink:href="#eventDot" data-hash="2" x="-220" y="140"><title>Partially borrows resource from s</title></use>
        <use xlink:href="#eventDot" data-hash="2" x="-220" y="180"><title>Partially lends resource to println!()</title></use>
        <use xlink:href="#eventDot" data-hash="2" x="-220" y="180"><title>Partially reacquires resource from println!()</title></use>
        <use xlink:href="#eventDot" data-hash="2" x="-220" y="180"><title>Partially returns resource to s</title></use>
        <use xlink:href="#eventDot" data-hash="2" x="-220" y="300"><title>Goes out of scope</title></use>
        <use xlink:href="#eventDot" data-hash="3" x="-150" y="160"><title>Partially borrows resource from s</title></use>
        <use xlink:href="#eventDot" data-hash="3" x="-150" y="180"><title>Partially lends resource to println!()</title></use>
        <use xlink:href="#eventDot" data-hash="3" x="-150" y="180"><title>Partially reacquires resource from println!()</title></use>
        <use xlink:href="#eventDot" data-hash="3" x="-150" y="180"><title>Partially returns resource to s</title></use>
        <use xlink:href="#eventDot" data-hash="3" x="-150" y="300"><title>Goes out of scope</title></use>
        <use xlink:href="#eventDot" data-hash="4" x="-80" y="240"><title>Fully borrows resource from s</title></use>
        <use xlink:href="#eventDot" data-hash="4" x="-80" y="260"><title>Partially lends resource to println!()</title></use>
        <use xlink:href="#eventDot" data-hash="4" x="-80" y="260"><title>Partially reacquires resource from println!()</title></use>
        <use xlink:href="#eventDot" data-hash="4" x="-80" y="260"><title>Fully returns resource to s</title></use>
        <use xlink:href="#eventDot" data-hash="4" x="-80" y="300"><title>Goes out of scope</title></use>
    </g>

    <g id="dividers">
            <line class="solid" stroke="beige" x1="-20" x2="-20" y1="80" y2="400"/>
    </g>

    <g id="code">
        <text class="code" x="0" y="80"> fn main(){ </text>
        <text class="code" x="0" y="100">     let mut <tspan data-hash="1">s</tspan> = String::from("hello"); </text>
        <text class="code" x="0" y="120">  </text>
        <text class="code" x="0" y="140">     let <tspan data-hash="2">r1</tspan> = <tspan data-hash="1">&amp;s</tspan>; // no problem </text>
        <text class="code" x="0" y="160">     let <tspan data-hash="3">r2</tspan> = <tspan data-hash="1">&amp;s</tspan>; // no problem </text>
        <text class="code" x="0" y="180">     println!("{} and {}", <tspan data-hash="2">r1</tspan>, <tspan data-hash="3">r2</tspan>); </text>
        <text class="code" x="0" y="200">     // <tspan data-hash="2">r1</tspan> and <tspan data-hash="3">r2</tspan> are no longer used after this point </text>
        <text class="code" x="0" y="220">  </text>
        <text class="code" x="0" y="240">     let <tspan data-hash="4">r3</tspan> = <tspan data-hash="1">&amp;mut s</tspan>; // no problem </text>
        <text class="code" x="0" y="260">     println!("{}", <tspan data-hash="4">r3</tspan>); </text>
        <text class="code" x="0" y="280">  </text>
        <text class="code" x="0" y="300"> } </text>
    </g>

   
</svg>