<svg width="900px" height="600px" viewBox="-300 0 600 600"
    xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

  <title>SVG demonstration</title>
  <desc>Mozilla CSS Getting Started - SVG demonstration</desc>

  <defs>
    <radialGradient id="fade" cx="0" cy="0" r="200"
        gradientUnits="userSpaceOnUse">
      <stop id="fade-stop-1" offset="33%"/>
      <stop id="fade-stop-2" offset="95%"/>
    </radialGradient>
    <style type="text/css">
      <![CDATA[
  svg {
    background-color: beige;
  }
  
  #heading {
    font-size: 24px;
    font-weight: bold;
  }
  
  #caption {
    font-size: 12px;
  }
  
  /* flower */
  #flower:hover {
    cursor: crosshair;
  }
  
  /* gradient */
  #fade-stop-1 {
    stop-color: blue;
  }
  
  #fade-stop-2 {
    stop-color: white;
  }
  
  /* petals */
  .segment-fill {
    fill: var(--segment-fill-fill);
    stroke: var(--segment-fill-stroke);
    stroke-width: var(--segment-fill-stroke-width);
  }
  
  .segment-fill:hover {
    fill: var(--segment-fill-fill-hover);
    stroke: var(--segment-fill-stroke-hover);
  }
  
  .segment-edge {
    fill: var(--segment-edge-fill);
    stroke: var(--segment-edge-stroke);
    stroke-width: var(--segment-edge-stroke-width);
  }
  
  .segment-edge:hover {
      stroke: var(--segment-edge-stroke-hover);
  }
  
  /* outer petals */
  #outer-petals {
    opacity: .75;
    --segment-fill-fill: azure;
    --segment-fill-stroke: lightsteelblue;
    --segment-fill-stroke-width: 1;
    --segment-edge-fill: none;
    --segment-edge-stroke: deepskyblue;
    --segment-edge-stroke-width: 3;
    --segment-fill-fill-hover: plum;
    --segment-fill-stroke-hover: none;
    --segment-edge-stroke-hover: slateblue;
  }
  
  /*
   Non-standard way of styling elements referenced via <use> elements,
   supported by some older browsers
  */
  #outer-petals .segment-fill {
    fill: azure;
    stroke: lightsteelblue;
    stroke-width: 1;
  }
  
  #outer-petals .segment-edge {
    fill: none;
    stroke: deepskyblue;
    stroke-width: 3;
  }
  
  #outer-petals .segment:hover > .segment-fill {
    fill: plum;
    stroke: none;
  }
  
  #outer-petals .segment:hover > .segment-edge {
    stroke: slateblue;
  }
  
  /* inner petals */
  #inner-petals {
    --segment-fill-fill: yellow;
    --segment-fill-stroke: yellow;
    --segment-fill-stroke-width: 1;
    --segment-edge-fill: none;
    --segment-edge-stroke: yellowgreen;
    --segment-edge-stroke-width: 9;
    --segment-fill-fill-hover: darkseagreen;
    --segment-fill-stroke-hover: none;
    --segment-edge-stroke-hover: green;
  }
  
  /*
   Non-standard way of styling elements referenced via <use> elements,
   supported by some older browsers
  */
  #inner-petals .segment-fill {
    fill: yellow;
    stroke: yellow;
    stroke-width: 1;
  }
  
  #inner-petals .segment-edge {
    fill: none;
    stroke: yellowgreen;
    stroke-width: 9;
  }
  
  #inner-petals .segment:hover > .segment-fill {
    fill: darkseagreen;
    stroke: none;
  }
  
  #inner-petals .segment:hover > .segment-edge {
    stroke: green;
  }

  text.code {
    white-space: pre;
    font-family: "monospace";
  }
      ]]>
    </style>
    
    <g id="segment" class="segment">
        <path class="segment-fill" d="M0,0 v-200 a40,40 0 0,0 -62,10 z"/>
        <path class="segment-edge" d="M0,-200 a40,40 0 0,0 -62,10"/>
    </g>
    <g id="quadrant">
        <use xlink:href="#segment"/>
        <use xlink:href="#segment" transform="rotate(18)"/>
        <use xlink:href="#segment" transform="rotate(36)"/>
        <use xlink:href="#segment" transform="rotate(54)"/>
        <use xlink:href="#segment" transform="rotate(72)"/>
    </g>
    <g id="petals">
        <use xlink:href="#quadrant"/>
        <use xlink:href="#quadrant" transform="rotate(90)"/>
        <use xlink:href="#quadrant" transform="rotate(180)"/>
        <use xlink:href="#quadrant" transform="rotate(270)"/>
    </g>
    <radialGradient id="fade" cx="0" cy="0" r="200"
        gradientUnits="userSpaceOnUse">
        <stop id="fade-stop-1" offset="33%"/>
        <stop id="fade-stop-2" offset="95%"/>
    </radialGradient>
  </defs>

    <g id="title">
        <text id="heading" x="-300" y="30">Visualization of Rust Lifetime with no Borrow</text>
        <text id="caption" x="-300" y="50">Hover over timeline event to get more information; click on variables to see its timeline.</text>
    </g>
    
    <g id="code">
        <text class="code" x="0" y="80" dy="40">fn fun() {</text>
        <text class="code" x="0" y="100" dy="40">    let <tspan data-hash="3">z</tspan> = String::from("z");</text>
        <text class="code" x="0" y="120" dy="40">    let <tspan data-hash="1">x</tspan> = <tspan data-hash="2">y</tspan>;</text>
        <text class="code" x="0" y="140" dy="40">    println!("{}", <tspan data-hash="1">x</tspan>);        // pretend nothing happens inside a macro</text>
        <text class="code" x="0" y="160" dy="40">    // println!("{}", <tspan data-hash="2">y</tspan>);       // Uncomment this line incurs error[E0382]: borrow of moved value: `<tspan data-hash="2">y</tspan>`</text>
        <text class="code" x="0" y="180" dy="40">    // println!("{}", <tspan data-hash="3">z</tspan>);       // Uncomment this line incurs error[E0382]: borrow of moved value: `<tspan data-hash="3">z</tspan>`</text>
        <text class="code" x="0" y="200" dy="40">}</text>
        <text class="code" x="0" y="220" dy="40">fn main() {</text>
        <text class="code" x="0" y="240" dy="40">   fun();</text>
        <text class="code" x="0" y="260" dy="40">}</text>
    </g>
  <!-- <g id="flower">
    <circle id="overlay" cx="0" cy="0" r="200" stroke="none" fill="url(#fade)"/>
    <use id="outer-petals" xlink:href="#petals"/>
    <use id="inner-petals" xlink:href="#petals"
        transform="rotate(9) scale(0.33)"/>
  </g> -->
</svg>