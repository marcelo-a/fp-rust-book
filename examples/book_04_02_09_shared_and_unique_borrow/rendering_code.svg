<svg width="450" height="370px" 
        xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

    <desc>shared_and_unique_borrow</desc>

    <defs>
        <style type="text/css">
        <![CDATA[
        /* general setup */
:root {
    --bg-color:#f1f1f1;
    --text-color: #6e6b5e;
}

svg {
    background-color: var(--bg-color);
}

text {
    /* fill: white; */
    /* fill: var(--text-color); */
    vertical-align: baseline;
    text-anchor: start;
}

#heading {
    font-size: 24px;
    font-weight: bold;
}

#caption {
    font-size: 0.875em;
    font-family: "Open Sans", sans-serif;
    font-style: italic;
}

/* code related styling */
text.code {
    fill: #6e6b5e;
    white-space: pre;
    font-family: "Source Code Pro", Consolas, "Ubuntu Mono", Menlo, "DejaVu Sans Mono", monospace, monospace !important;
    font-size: 0.875em;
}

/* event related styling */
#eventDot:hover {
    transform: scale(1.5);
}

#eventDot {
    transition: all 0.3s;
}

#functionDot:hover {
    transform: scale(1.5);
}

#functionDot {
    transition: all 0.3s;
}

/* timeline/event interaction styling */
.solid {
    stroke-width: 5px;
}

.hollow {
    stroke-width: 5px;
    fill: var(--bg-color);
}

.dotted {
    stroke-width: 5px;
    stroke-dasharray: "2 1";
}

.extend {
    stroke-width: 1px;
    stroke-dasharray: "2 1";
}

.colorless {
    stroke: var(--bg-color);
    fill: var(--bg-color);
}

.functionIcon {
    stroke: gray;
    fill: white;
    stroke-width: 1px;
    font-size: 24px;
    font-family: times;
    font-weight: lighter;
    dominant-baseline: central;
    text-anchor: start;
    font-style: italic;
}

/* flex related styling */
.flex-container {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    flex-wrap: nowrap;
    flex-shrink: 1;
}

/* hash based styling */
[data-hash="0"] {
    fill: #6e6b5e;
}

[data-hash="1"] {
    fill: #3355ff;
    stroke: #3355ff;
}

[data-hash="2"] {
    fill: #33cc33;
    stroke: #33cc33;
}

[data-hash="3"] {
    fill: #dc143c;
    stroke: #dc143c;
}

[data-hash="4"] {
    fill: #6600ff;
    stroke: #6600ff;
}

[data-hash="5"] {
    fill: #ff33cc;
    stroke: #ff33cc;
}

[data-hash="6"] {
    fill: #008080;
    stroke: #008080;
}

[data-hash="7"] {
    fill: #ff9900;
    stroke: #ff9900;
}

[data-hash="8"] {
    fill: #00d6fc;
    stroke: #00d6fc;
}

[data-hash="9"] {
    fill: #9aeb58;
    stroke: #9aeb58;
}
        ]]>
        </style>
    </defs>

    <g>
        <text id="caption" x="30" y="30">Hover over timeline events (dots), states (vertical lines),</text>
        <text id="caption" x="30" y="50">and actions (arrows) for extra information.</text>
    </g>

    <g id="code">
        <text class="code" x="20" y="90"> fn main(){ </text>
        <text class="code" x="20" y="110">     let mut <tspan data-hash="1">s</tspan> = <tspan class="fn" data-hash="0" hash="5">String::from</tspan>("hello"); </text>
        <text class="code" x="20" y="130">  </text>
        <text class="code" x="20" y="150">     let <tspan data-hash="2">r1</tspan> = <tspan data-hash="1">&amp;s</tspan>; <tspan fill="#AAA">// no problem</tspan> </text>
        <text class="code" x="20" y="170">     let <tspan data-hash="3">r2</tspan> = <tspan data-hash="1">&amp;s</tspan>; <tspan fill="#AAA">// no problem</tspan> </text>
        <text class="code" x="20" y="190">     println!("{} and {}", <tspan data-hash="2">r1</tspan>, <tspan data-hash="3">r2</tspan>); </text>
        <text class="code" x="20" y="210">     <tspan fill="#AAA">// <tspan data-hash="2">r1</tspan> and <tspan data-hash="3">r2</tspan> are no longer used after this point</tspan> </text>
        <text class="code" x="20" y="230">  </text>
        <text class="code" x="20" y="250">     let <tspan data-hash="4">r3</tspan> = <tspan data-hash="1">&amp;mut s</tspan>; <tspan fill="#AAA">// no problem</tspan> </text>
        <text class="code" x="20" y="270">     println!("{}", <tspan data-hash="4">r3</tspan>); </text>
        <text class="code" x="20" y="290">  </text>
        <text class="code" x="20" y="310"> } </text>
    </g>

   
</svg>